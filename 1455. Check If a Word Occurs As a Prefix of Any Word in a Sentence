Problem: 1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence
Description:
Given a sentence of words separated by spaces and a searchWord, determine if searchWord is a prefix of any word in the sentence. Return the 1-indexed position of the first word where searchWord is a prefix. If no such word exists, return -1.

Approach:
Split the Sentence: Use the split(" ") method to break the sentence into individual words.
Check Prefix: Iterate through the words and use the startsWith method to check if any word starts with the searchWord.
Index Return: If a match is found, return the 1-indexed position. If no match exists, return -1.


Code:
java
Copy code
class Solution {
    public int isPrefixOfWord(String sentence, String searchWord) {
        // Split the sentence into words
        String[] words = sentence.split(" ");
        // Iterate through the words
        for (int i = 0; i < words.length; i++) {
            // Check if the current word starts with searchWord
            if (words[i].startsWith(searchWord)) {
                return i + 1; // Return 1-indexed position
            }
        }
        return -1; // No match found
    }
}


Example Walkthrough:
Example 1:

Input: sentence = "i love eating burger", searchWord = "burg"
Output: 4
Explanation: "burg" is a prefix of "burger," which is the 4th word.
Example 2:

Input: sentence = "this problem is an easy problem", searchWord = "pro"
Output: 2
Explanation: "pro" is a prefix of "problem" at the 2nd word.
Example 3:

Input: sentence = "i am tired", searchWord = "you"
Output: -1
Explanation: "you" is not a prefix of any word.
Learned Concepts:
split() Method:

Used to break a string into an array based on a delimiter.
Example: "a b c".split(" ") â†’ ["a", "b", "c"].
startsWith() Method:

Checks if a string starts with a specific prefix.
Example: "hello".startsWith("he") â†’ true.
Complexity Analysis:
Time Complexity: O(n * m)

n is the number of words in the sentence.
m is the average length of the words.
Space Complexity: O(n)

Space for storing the words array.
Tags:
String Manipulation
Array
Prefix Matching
Feel free to contribute further optimizations or test cases! ðŸŽ‰
